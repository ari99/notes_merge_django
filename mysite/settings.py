"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 1.10.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os
# Parse database configuration from $DATABASE_URL
import dj_database_url

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
print("BASE_DIR "+BASE_DIR)
DJANGO_ROOT = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
print("DJANGO_ROOT "+DJANGO_ROOT)
SITE_ROOT = os.path.dirname(DJANGO_ROOT)
print("SITE_ROOT "+SITE_ROOT)
SITE_NAME = os.path.basename(DJANGO_ROOT)
print("SITE_NAME "+SITE_NAME)




# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'x&@nv!%*46*8kbujl=pz^mhff26rkf6ue1f8gtaac34)d6#j#y'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["notes-merge.herokuapp.com", 'localhost', '127.0.0.1']



# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/
PROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))
STATIC_ROOT = os.path.join(PROJECT_ROOT, 'staticfiles')


STATIC_URL = '/static/'

STATICFILES_DIRS = [
  os.path.join(PROJECT_ROOT, 'static'),
  os.path.join(BASE_DIR, "static"),
  os.path.join(BASE_DIR, "notesmerge/templates/notesmerge/build/static"),
]

print("static files")
print(STATICFILES_DIRS)


print("base dir files")
print(os.listdir(BASE_DIR))

# Application definition

INSTALLED_APPS = [
    'notesmerge.apps.NotesmergeConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
    'oauth2_provider',

]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    #'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

]

ROOT_URLCONF = 'mysite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

#https://devcenter.heroku.com/articles/getting-started-with-python#provision-a-database
#DATABASES['default'] =  dj_database_url.config()


DATABASES = {}
DATABASES['default'] =  dj_database_url.config()


'''
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'notesmergedb',
        'USER': 'myfakedatabaseuser',
        'PASSWORD': 'myfakepassword',
        'HOST': '127.0.0.1',
        'PORT': '5432',
    }
}
'''

# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True




# I added https://github.com/ottoyiu/django-cors-headers/
CORS_ORIGIN_ALLOW_ALL = True

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
            #            'level': os.getenv('DJANGO_LOG_LEVEL', 'DEBUG'),

        },
        'django.contrib.auth': {
                'handlers': ['console'],
                'level': 'DEBUG',
                'propagate': True,
        },
        'oauth2_provider': {
                'handlers': ['console'],
                'level': 'DEBUG',
                'propagate': True,
        },
        'rest_framework': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}

OAUTH2_PROVIDER = {
    # this is the list of available scopes
    'SCOPES': {'read': 'Read scope', 'write': 'Write scope', }
}


REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        #'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',

        'oauth2_provider.ext.rest_framework.OAuth2Authentication',
    )
}
